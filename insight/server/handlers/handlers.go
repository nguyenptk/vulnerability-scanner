package server

import (
	"encoding/json"
	"net/http"

	"github.com/nguyenptk/vulnerability-scanner/insight/common/log"
	"github.com/nguyenptk/vulnerability-scanner/insight/storages/mysql"
)

// Insight holds the singleton object for handlers
type Insight struct {
	MySQL  *mysql.Database
	Logger *log.Logger
}

// Write response body to client
func (f *Insight) writeRespBody(w http.ResponseWriter, v interface{}) {
	resp := make(map[string]interface{})
	resp["message"] = v
	result, err := json.Marshal(resp)
	if err != nil {
		f.Logger.Error("[%s] Error happened in JSON marshal. Err: %s", err)
	}
	w.Write(result)
}

// Write response body to client with offset & limit
func (f *Insight) writeRespBodyOffsetLimit(w http.ResponseWriter, v interface{}, offset, limit int) {
	resp := make(map[string]interface{})
	resp["message"] = v
	resp["offset"] = offset
	resp["limit"] = limit
	result, err := json.Marshal(resp)
	if err != nil {
		f.Logger.Error("[%s] Error happened in JSON marshal. Err: %s", err)
	}
	w.Write(result)
}
