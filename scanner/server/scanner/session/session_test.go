package session

import (
	"sync"
	"testing"
	"time"

	"github.com/nguyenptk/vulnerability-scanner/scanner/server/scanner/gitprovider"
	"github.com/nguyenptk/vulnerability-scanner/scanner/server/scanner/options"
	"github.com/nguyenptk/vulnerability-scanner/scanner/server/scanner/vulnerabilities"
)

var defaultOptions = &options.Options{
	Token:  "s.abc",
	Target: "test",
	Repos:  "nguyenptk/hello-world",
}

func TestSession_Initialize(t *testing.T) {
	sess := createNewSession()
	sess.Initialize(defaultOptions)
	if sess.Out == nil {
		t.Errorf("Want Logger, got nil")
	}
	if sess.Stats == nil {
		t.Errorf("Want Stats, got nil")
	}
	sess.End()
}

func TestSession_End(t *testing.T) {
	sess := createNewSession()
	sess.Initialize(defaultOptions)
	sess.End()

	nilTime := time.Time{}
	if sess.Stats.FinishedAt == nilTime {
		t.Errorf("Stats field FinishAt should not be nil time")
	}
	if sess.Stats.Status != StatusSuccess {
		t.Errorf("Want %v, got %v", StatusSuccess, sess.Stats.Status)
	}
}

func TestSession_InitLogger(t *testing.T) {
	sess := createNewSession()
	sess.Initialize(defaultOptions)
	if sess.Out == nil {
		t.Errorf("Want Logger, got nil")
	}
	sess.End()
}

func TestSession_InitStats(t *testing.T) {
	sess := createNewSession()
	sess.Initialize(defaultOptions)
	if sess.Stats == nil {
		t.Errorf("Want Stats, got nil")
	}
	sess.End()
}

func TestSession_AddVulnerability(t *testing.T) {
	sess := createNewSession()
	sess.Initialize(defaultOptions)
	sess.AddVulnerability(&vulnerabilities.Vulnerability{})
	if len(sess.Vulnerabilities) != 1 {
		t.Errorf("Want 1, got %v", len(sess.Vulnerabilities))
	}
	sess.End()
}

func TestSession_AddRepository(t *testing.T) {
	sess := createNewSession()
	sess.Initialize(defaultOptions)
	sess.AddRepository(&gitprovider.Repository{})
	if len(sess.Repositories) != 1 {
		t.Errorf("Want 1, got %v", len(sess.Repositories))
	}
	sess.End()
}

func createNewSession() *Session {
	return &Session{
		Mutex:           sync.Mutex{},
		Options:         &options.Options{},
		Out:             nil,
		Stats:           nil,
		Vulnerabilities: nil,
		Repositories:    nil,
		Signatures:      nil,
	}
}
