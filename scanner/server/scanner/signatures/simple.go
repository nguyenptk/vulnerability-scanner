/*
 * Copyright 2019 Grabtaxi Holdings PTE LTE (GRAB), All rights reserved.
 * Use of this source code is governed by an MIT-style license that can be found in the LICENSE file
 */

package signatures

// SimpleSignature ...
type SimpleSignature struct {
	part        string
	match       string
	description string
	comment     string
}

// Match checks if given file matches with signature
func (s SimpleSignature) Match(file MatchFile) []*MatchResult {
	var haystack *string
	switch s.part {
	case PartPath:
		haystack = &file.Path
	case PartFilename:
		haystack = &file.Filename
	case PartExtension:
		haystack = &file.Extension
	case PartContent:
		haystack = &file.Content
	default:
		return nil
	}

	var matchResults []*MatchResult

	if s.match == *haystack {
		matchResults = append(matchResults, &MatchResult{
			Filename:    file.Filename,
			Path:        file.Path,
			Extension:   file.Extension,
			Line:        0,
			LineContent: "",
		})
	}

	return matchResults
}

// Description returns signature description
func (s SimpleSignature) Description() string {
	return s.description
}

// Comment returns signature comment
func (s SimpleSignature) Comment() string {
	return s.comment
}

// Part returns signature part type
func (s SimpleSignature) Part() string {
	return s.part
}

// SimpleSignatures contains simple signatures
var SimpleSignatures = []Signature{
	// Extensions
	SimpleSignature{
		part:        PartExtension,
		match:       ".log",
		description: "Log file",
		comment:     "Log files can contain secret HTTP endpoints, session IDs, API keys and other goodies",
	},
	SimpleSignature{
		part:        PartFilename,
		match:       "id_rsa.pub",
		description: "Public key file",
		comment:     "Shell configuration files can contain passwords, API keys, hostnames and other goodies",
	},
}
