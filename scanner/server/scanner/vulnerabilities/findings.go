package vulnerabilities

import (
	"crypto/sha256"
	"fmt"
	"io"
	"time"
)

// Finding holds the info for scan findings per vulnerability
type Finding struct {
	ID              string  `json:"id,omitempty"`
	VulnerabilityID string  `json:"vulnerability_id,omitempty"`
	FilePath        string  `json:"file_path,omitempty"`
	Action          string  `json:"action,omitempty"`
	Description     string  `json:"description,omitempty"`
	Comment         string  `json:"comment,omitempty"`
	FileURL         string  `json:"file_url,omitempty"`
	Line            *uint64 `json:"line,omitempty"`
}

// GenerateHashID generates an unique hash for Finding
func (f *Finding) GenerateHashID() (hash string, err error) {
	// Used for dedupe in defect dojo
	h := sha256.New()
	str := fmt.Sprintf("%s%s%v%d", f.FileURL, f.Action, f.Line, time.Now().Unix())

	_, err = io.WriteString(h, str)
	if err != nil {
		return "", err
	}

	return fmt.Sprintf("%x", h.Sum(nil)), nil
}
