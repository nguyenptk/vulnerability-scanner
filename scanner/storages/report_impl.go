package storages

import (
	"time"

	"github.com/nguyenptk/vulnerability-scanner/scanner/server/scanner/vulnerabilities"
	"github.com/nguyenptk/vulnerability-scanner/scanner/storages/mysql"
)

// ReportStorage
type ReportStorage struct {
	Report *Report
}

// Report holds the info for Reports table
type Report struct {
	ID           string    `json:"id,omitempty"`
	QueueAt      time.Time `json:"queue_at,omitempty"`
	StartedAt    time.Time `json:"started_at,omitempty"`
	FinishedAt   time.Time `json:"finished_at,omitempty"`
	Status       string    `json:"status,omitempty"`
	Progress     float64   `json:"progress,omitempty"`
	Targets      int       `json:"targets,omitempty"`
	Repositories int       `json:"repositories,omitempty"`
	Files        int       `json:"files,omitempty"`
	Findings     int       `json:"findings,omitempty"`
	CreatedAt    time.Time `json:"created_at,omitempty"`
	UpdatedAt    time.Time `json:"updated_at,omitempty"`
}

// Insert Report to Reports table
func (f *ReportStorage) Insert(db mysql.Database, result *vulnerabilities.Result) {
	f.ConvertResultToReport(result)
	db.DB.Create(f.Report)
}

// ConvertResultToReport holds the Report object in ReportStorage
func (f *ReportStorage) ConvertResultToReport(result *vulnerabilities.Result) {
	f.Report = &Report{
		ID:           result.ID,
		QueueAt:      result.QueueAt,
		StartedAt:    result.StartedAt,
		FinishedAt:   result.FinishedAt,
		Status:       result.Status,
		Targets:      *result.Targets,
		Repositories: *result.Repositories,
		Files:        *result.Files,
		Findings:     *result.Findings,
		CreatedAt:    time.Now(),
		UpdatedAt:    time.Now(),
	}
}
